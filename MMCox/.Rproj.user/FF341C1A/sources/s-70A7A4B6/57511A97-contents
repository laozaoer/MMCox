RtestMat=matrix(0, nrow = 10, ncol = 7)
RtestMat[,1]=c(rep(1,3),rep(2,4),rep(3,3))
RtestMat[3:10,2]=runif(8,0,3)
RtestMat[,3]=runif(10,3,5)
RtestMat[1:2,4]=1
RtestMat[7:9,5]=1
RtestMat[7:9,3]=Inf
RtestMat[,6]=rnorm(10,0,1)
RtestMat[,7]=rnorm(10,0,1)
RtestMat[9,2]=5
RtestMat[8,2]=5
RtestMat[5,3]=5






tktemp=sort(unique(c(RtestMat[,2],RtestMat[,3])))
tk=tktemp[-c(1,length(tktemp))]


TL=TmatL(RtestMat[,2:3],tk)
TR=TmatR(RtestMat[,2:3],tk)
TLR=TmatLR(RtestMat[,2:3],tk)

beta=as.matrix(c(1,1))
theta=1
gamma=as.matrix(rep(0.1,length(tk)))



library(gaussquad)
myrules=gaussquad::hermite.h.quadrature.rules(5,normalized=FALSE)
myrules=as.matrix(myrules[[5]])




Likelihood_rules(myrules,beta,theta,gamma,RtestMat,TL,TR)
rowSums(WeightFunc(myrules,beta,theta,gamma,RtestMat,TL,TR))

a=Updateonce(myrules,beta,theta,gamma,RtestMat,TL,TR,TLR)
MainFunc(RtestMat,myrules,0.0001)


(a=matrix(c(1,2,3,4), nrow = 2, ncol = 2)
elementwise_pow(a,a)





